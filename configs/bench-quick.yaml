# Quick Development Testing Configuration
# Optimized for fast development feedback and validation

experiment:
  name: "Quick Development Testing - Rust vs TinyGo"
  version: "2.1-quick"
  description: "Fast development configuration for engineering validation"

# Minimal measurement parameters for speed
environment:
  warmup_runs: 5               # Minimal warmup for development
  measure_runs: 15             # Basic sampling for trend detection
  repetitions: 1               # Single run for maximum speed

  # Quick timeout for fast feedback
  timeout_ms: 20000           # 20s max per task

# Micro-scale tasks for development speed
tasks:
  mandelbrot:
    description: "Micro-scale CPU computation test"
    scales:
      micro:                  # Ultra-fast development scale
        width: 64             # 64x64 grid for quick validation
        height: 64
        max_iter: 100         # Reduced iterations
    fixed_params:
      center_real: -0.743643887037
      center_imag: 0.131825904205
      scale_factor: 3.0

  json_parse:
    description: "Micro-scale JSON processing test"
    scales:
      micro:                  # Fast parsing validation
        record_count: 500     # 500 records for quick test
    schema:
      fields: ["id", "value", "flag", "name"]
      id_sequential: true
      value_random: true
      flag_derived: true
      name_pattern: "user_{id}"

  matrix_mul:
    description: "Micro-scale matrix multiplication test"
    scales:
      micro:                  # Quick matrix computation
        dimension: 64         # 64x64 matrices for speed
    computation:
      data_type: "f32"
      algorithm: "naive_triple_loop"
      precision_digits: 6

# Same optimized language configurations
languages:
  rust:
    enabled: true
    target: "wasm32-unknown-unknown"
    optimization_levels:
      - name: "optimized"
        cargo_flags: "--release"
        cargo_config:
          opt_level: 3
          lto: "fat"
          codegen_units: 1
          panic: "abort"
          strip: "debuginfo"
    post_processing:
      - "wasm-strip"
      - "wasm-opt -O3"

  tinygo:
    enabled: true
    target: "wasm"
    optimization_levels:
      - name: "optimized"
        build_flags:
          - "-opt=3"
          - "-panic=trap"
          - "-no-debug"
          - "-scheduler=none"
    post_processing:
      - "wasm-strip"
      - "wasm-opt -Oz"

# Basic verification
verification:
  hash_algorithm: "fnv1a"
  hash_offset_basis: 2166136261
  hash_prime: 16777619
  floating_point_precision: 6

